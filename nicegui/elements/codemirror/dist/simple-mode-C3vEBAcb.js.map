{"version":3,"file":"simple-mode-C3vEBAcb.js","sources":["../node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"sourcesContent":["export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    mergeTokens: meta.mergeTokens,\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.dontIndentStates.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n"],"names":["simpleMode","states","ensureState","states_","meta","languageData","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","indent","dedent","name","startState","pending","copyState","s","slice","stack","token","tokenFunction","indentFunction","mergeTokens","Error","next","this","regex","val","flags","RegExp","ignoreCase","source","String","toRegex","apply","replace","result","asToken","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","j","backUp","join","textAfter","dontIndentStates","indexOf","rules","scan","dedentIfLineStart","m","exec"],"mappings":"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","x_google_ignoreList":[0]}