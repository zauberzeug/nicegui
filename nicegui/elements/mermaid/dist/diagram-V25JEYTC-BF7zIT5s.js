import{c as t}from"./chunk-4KE642ED-_NPJ3N4I.js";import{p as e}from"./gitGraph-F2EDSAW4-LKDW3VZQ-DVC0VkBM.js";import{m as a,F as r,M as l,A as o,L as n,B as i,w as s,l as d,a5 as c,k as p,v as k,H as b,n as g,J as h}from"./index-Dne072Ek.js";import"./chunk-BKDDFIKN-CmrN6bhn.js";var f={packet:[]},u=structuredClone(f),x=g.packet,m=a(()=>{let t=d({...x,...b().packet});return t.showBits&&(t.paddingY+=10),t},"getConfig"),w=a(()=>u.packet,"getPacket"),$={pushWord:a(t=>{t.length>0&&u.packet.push(t)},"pushWord"),getPacket:w,getConfig:m,clear:a(()=>{k(),u=structuredClone(f)},"clear"),setAccTitle:s,getAccTitle:i,setDiagramTitle:n,getDiagramTitle:o,getAccDescription:l,setAccDescription:r},y=a(e=>{t(e,$);let a=-1,r=[],l=1,{bitsPerRow:o}=$.getConfig();for(let{start:t,end:n,label:i}of e.blocks){if(n&&n<t)throw new Error(`Packet block ${t} - ${n} is invalid. End must be greater than start.`);if(t!==a+1)throw new Error(`Packet block ${t} - ${n??t} is not contiguous. It should start from ${a+1}.`);for(a=n??t,h.debug(`Packet block ${t} - ${a} with label ${i}`);r.length<=o+1&&$.getPacket().length<1e4;){let[e,a]=C({start:t,end:n,label:i},l,o);if(r.push(e),e.end+1===l*o&&($.pushWord(r),r=[],l++),!a)break;({start:t,end:n,label:i}=a)}}$.pushWord(r)},"populate"),C=a((t,e,a)=>{if(void 0===t.end&&(t.end=t.start),t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);return t.end+1<=e*a?[t,void 0]:[{start:t.start,end:e*a-1,label:t.label},{start:e*a,end:t.end,label:t.label}]},"getNextFittingBlock"),B={parse:a(async t=>{let a=await e("packet",t);h.debug(a),y(a)},"parse")},F=a((t,e,a,r)=>{let l=r.db,o=l.getConfig(),{rowHeight:n,paddingY:i,bitWidth:s,bitsPerRow:d}=o,k=l.getPacket(),b=l.getDiagramTitle(),g=n+i,h=g*(k.length+1)-(b?0:n),f=s*d+2,u=c(e);u.attr("viewbox",`0 0 ${f} ${h}`),p(u,h,f,o.useMaxWidth);for(let[t,e]of k.entries())W(u,e,t,o);u.append("text").text(b).attr("x",f/2).attr("y",h-g/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")},"draw"),W=a((t,e,a,{rowHeight:r,paddingX:l,paddingY:o,bitWidth:n,bitsPerRow:i,showBits:s})=>{let d=t.append("g"),c=a*(r+o)+o;for(let t of e){let e=t.start%i*n+1,a=(t.end-t.start+1)*n-l;if(d.append("rect").attr("x",e).attr("y",c).attr("width",a).attr("height",r).attr("class","packetBlock"),d.append("text").attr("x",e+a/2).attr("y",c+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(t.label),!s)continue;let o=t.end===t.start,p=c-2;d.append("text").attr("x",e+(o?a/2:0)).attr("y",p).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",o?"middle":"start").text(t.start),o||d.append("text").attr("x",e+a).attr("y",p).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(t.end)}},"drawWord"),S={draw:F},D={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},P=a(({packet:t}={})=>{let e=d(D,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`},"styles"),z={parser:B,db:$,renderer:S,styles:P};export{z as diagram};
